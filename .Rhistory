geom_tile(color = "white")+
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
geom_text(aes(y=Var1, x=Var2, label = value), color = "black", size = 4) +
theme_classic()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
#coord_fixed() +
labs(x="Yeo et al. (2015) Maps", y="The 5 Components",
title="Correlation heatmap between semantic clusters \nand Yeo et al. (2015) maps")
g2
rm(list=ls())
library(R.matlab)
library(ggplot2)
library(wordcloud)
rm(list=ls())
data_dir <- '/Users/Home/gdrive/Lababdi/Neurosynth/data'
FiFj <- readMat(paste0(data_dir, '/FiFjLambda_20comps.mat'))
Fjs <- data.frame(FiFj$Fj20[,1:5])
names(Fjs) <- c("V1","V2","V3", "V4", "V5")
load('./data/stemmed_words_vec_9987.RData')
load('./data/stemmed_words_freq_table.RData')
FjAssign<-read.csv(paste0(data_dir, '/DB_Assignments/fj_via_fi__KNN__assign_.csv') ,header = T)
FjAssign<- FjAssign[,-1] # delete first column
FjAssign<- apply(FjAssign,1, function(x) which(x==1))
FjAssign<-as.factor(FjAssign)
#FjAssign<-as.factor(paste0("Cluster ", FjAssign))
FjAssign<-read.csv(paste0(data_dir, '/DB_Assignments/fj_via_fi__KNN__assign_.csv') ,header = T)
FjAssign<-read.csv(paste0(data_dir, '/DB_Assignments/words_clusters.csv') ,header = T)
FjAssign<- FjAssign[,-1] # delete first column
FjAssign<- apply(FjAssign,1, function(x) which(x==1))
FjAssign<-as.factor(FjAssign)
words.coordinates.all <- data.frame(round(Fjs,2) , word=stemmed_words_vec_9987, freq=freq.df$freq, clust=FjAssign)
num <- 20
term.matrix <- cbind(c(words.coordinates.all$freq[order(words.coordinates.all$V5)[1:num]], rep(0, num)),
c(rep(0,num), words.coordinates.all$freq[order(words.coordinates.all$V5, decreasing = T)[1:num]]) )
ext20_c1 <- c(order(words.coordinates.all$V5)[1:num],
order(words.coordinates.all$V5, decreasing = T)[1:num])
row.names(term.matrix) <- words.coordinates.all$word[ext20_c1]
comparison.cloud(term.matrix[,c(2,1)],scale=c(7,3),
max.words=300,random.order=F,
colors=c("#D73027","#2171B5"),
rot.per = 0, fixed.asp = F)
comparison.cloud(term.matrix[,c(2,1)],scale=c(7,3),
max.words=300,random.order=F,
colors=c("#D73027","#2171B5"),
rot.per = 0, fixed.asp = F)
term.matrix <- cbind(c(words.coordinates.all$freq[order(words.coordinates.all$V1)[1:num]], rep(0, num)),
c(rep(0,num), words.coordinates.all$freq[order(words.coordinates.all$V1, decreasing = T)[1:num]]) )
term.matrix
ext20_c1 <- c(order(words.coordinates.all$V1)[1:num],
order(words.coordinates.all$V1, decreasing = T)[1:num])
row.names(term.matrix) <- words.coordinates.all$word[ext20_c1]
term.matrix
comparison.cloud(term.matrix[,c(2,1)],scale=c(7,3),
max.words=300,random.order=F,
colors=c("#D73027","#2171B5"),
rot.per = 0, fixed.asp = F)
stemmed_words_vec_9987
load(paste0(data_dir, '/stemmed_words_vec_9987.RData'))
load(paste0(data_dir, '/stemmed_words_freq_table.RData'))
FjAssign<-read.csv(paste0(data_dir, '/DB_Assignments/words_clusters.csv') ,header = T)
FjAssign<- FjAssign[,-1] # delete first column
FjAssign<- apply(FjAssign,1, function(x) which(x==1))
FjAssign<-as.factor(FjAssign)
#FjAssign<-as.factor(paste0("Cluster ", FjAssign))
words.coordinates.all <- data.frame(round(Fjs,2) , word=stemmed_words_vec_9987, freq=freq.df$freq, clust=FjAssign)
# change X1 X2 X3 X4 X5 according to the desired component
num <- 20
term.matrix <- cbind(c(words.coordinates.all$freq[order(words.coordinates.all$V1)[1:num]], rep(0, num)),
c(rep(0,num), words.coordinates.all$freq[order(words.coordinates.all$V1, decreasing = T)[1:num]]) )
ext20_c1 <- c(order(words.coordinates.all$V1)[1:num],
order(words.coordinates.all$V1, decreasing = T)[1:num])
row.names(term.matrix) <- words.coordinates.all$word[ext20_c1]
comparison.cloud(term.matrix[,c(2,1)],scale=c(7,3),
max.words=300,random.order=F,
colors=c("#D73027","#2171B5"),
rot.per = 0, fixed.asp = F)
stemmed_words_vec_9987
list1 <- load(paste0(data_dir, '/stemmed_words_vec_9987.RData'))
list2 <- load('./data/stemmed_words_vec_9987.RData')
list1
list1
load(paste0(data_dir, '/stemmed_words_vec_9987.RData'))
list1 <- stemmed_words_vec_9987
load('./data/stemmed_words_vec_9987.RData')
list2 <- stemmed_words_vec_9987
list1
list1 == list2
sort(list2)
sort(list2)[1:10]
sort(list2)[1:10] == list1
sort(list2)[1:10]
sort(list2) == list1
data_dir
list3 <- read.table(file='./data/stemmed_words_list.txt')
list3
list3$V1
list3$V1[1:10]
list3 <- read.table(file='./data/stemmed_words_list.txt')
list3 <- list3$V1
sort(list2) == list1
as.character(list3$V1)
list3 <- read.table(file='./data/stemmed_words_list.txt')
list3 <- as.character(list3$V1)
rm(list=ls())
library(R.matlab)
library(plyr)
library(ggplot2)
library(reshape2)
library(wordcloud)
data_dir <- './data'
FiFj <- readMat(paste0(data_dir, '/FiFjLambda_20comps_fulltau_lambda.mat'))
Fis <- data.frame(FiFj$Fi20[,1:5])
names(Fis) <- c("V1","V2","V3", "V4", "V5")
Fjs <- data.frame(FiFj$Fj20[,1:5])
names(Fjs) <- c("V1","V2","V3", "V4", "V5")
FiAssign<-read.csv(paste0(data_dir, '/studies_clusters_binarized.csv') ,header = T)
FiAssign<- FiAssign[,-1] # delete first column
FiAssign<- apply(FiAssign,1, function(x) which(x==1))
FiAssign<-as.factor(FiAssign)
#FiAssign<-as.factor(paste0("Cluster ", FiAssign))
FjAssign<-read.csv(paste0(data_dir, '/words_clusters_binarized.csv') ,header = T)
FjAssign<- FjAssign[,-1] # delete first column
FjAssign<- apply(FjAssign,1, function(x) which(x==1))
FjAssign<-as.factor(FjAssign)
#FjAssign<-as.factor(paste0("Cluster ", FjAssign))
stemmed_words_vec_9987 <- read.table(file=paste0(data_dir, '/stemmed_words_list.txt'))
stemmed_words_vec_9987 <- as.character(stemmed_words_vec_9987$V1)
pmids <- read.csv(paste0(data_dir, '/studies_metadata.csv'))
Fjs_words <- cbind(Fjs, FjAssign, word= stemmed_words_vec_9987)
Fis_studies <- cbind(Fis, FiAssign, pmids)
load(paste0(data_dir, '/stemmed_words_freq_table.RData'))
View(freq.df)
clust_evals <- read.csv(paste0(data_dir, '/clustering_eval_results.csv'))
freq.df
row.names(freq.df)
row.names(freq.df) == stemmed_words_vec_9987
row.names(freq.df)
View(Fjs_words)
Fjs_words <- cbind(word=stemmed_words_vec_9987, cluster=FjAssign, freq=freq.df$freq, Fjs)
View(Fjs_words)
Fjs_words <- cbind(word=stemmed_words_vec_9987, FjAssign, freq=freq.df$freq, Fjs)
Fis_studies <- cbind(Fis, FiAssign, pmids)
clust_evals <- read.csv(paste0(data_dir, '/clustering_eval_results.csv'))
chulls <- ddply(Fis_studies, .(FiAssign), function(df) df[chull(df$V1, df$V2), ])
g<- ggplot(data=Fis,
aes(x=V1,
y=V2,
color=FiAssign
)) +
geom_vline(xintercept = 0)+
geom_hline(yintercept = 0)+
geom_point(aes(color=FiAssign), size=1, alpha=.3) +
labs(color="Assignments") +
#geom_polygon(data=chulls, aes(x=V1, y=V2, group=FiAssign), fill=NA, size=1)+
#geom_point(size=2, alpha= .2) +
ggtitle("Studies' Component Scores: 1 vs. 2")+
xlab("Component 1: 0.42%, \u03BB = 0.25") +
ylab("Component 2: 0.35%, \u03BB = 0.20") +
#scale_colour_hue() +
#scale_colour_brewer(palette = "Set1") + #
theme_bw()
#Accent, Dark2, Paired, Pastel1, Pastel2, Set1, Set2, Set3
print(g)
chulls <- ddply(Fis_studies, .(FiAssign), function(df) df[chull(df$V1, df$V2), ])
g<- ggplot(data=Fis,
aes(x=V1,
y=V2,
color=FiAssign
)) +
geom_vline(xintercept = 0)+
geom_hline(yintercept = 0)+
geom_point(aes(color=FiAssign), size=1, alpha=.3) +
labs(color="Assignments") +
#geom_polygon(data=chulls, aes(x=V1, y=V2, group=FiAssign), fill=NA, size=1)+
#geom_point(size=2, alpha= .2) +
ggtitle("Studies' Component Scores: 1 vs. 2")+
xlab("Component 1: 0.42%, \u03BB = 0.25") +
ylab("Component 2: 0.35%, \u03BB = 0.20") +
#scale_colour_hue() +
#scale_colour_brewer(palette = "Set1") + #
theme_minimal()
#Accent, Dark2, Paired, Pastel1, Pastel2, Set1, Set2, Set3
print(g)
# 1 vs 2
chulls <- ddply(Fis_studies, .(FiAssign), function(df) df[chull(df$V1, df$V2), ])
g<- ggplot(data=Fis,
aes(x=V1,
y=V2,
color=FiAssign
)) +
geom_vline(xintercept = 0)+
geom_hline(yintercept = 0)+
geom_point(aes(color=FiAssign), size=1, alpha=.3) +
labs(color="Assignments") +
#geom_polygon(data=chulls, aes(x=V1, y=V2, group=FiAssign), fill=NA, size=1)+
#geom_point(size=2, alpha= .2) +
ggtitle("Studies' Component Scores: 1 vs. 2")+
xlab("Component 1: 0.42%, \u03BB = 0.25") +
ylab("Component 2: 0.35%, \u03BB = 0.20") +
#scale_colour_hue() +
#scale_colour_brewer(palette = "Set1") + #
theme_bw()
#Accent, Dark2, Paired, Pastel1, Pastel2, Set1, Set2, Set3
print(g)
# 1 vs 3
chulls <- ddply(Fis_studies, .(FiAssign), function(df) df[chull(df$V1, df$V3), ])
g<- ggplot(data=Fis,
aes(x=V1,
y=V3,
color=FiAssign
)) +
geom_vline(xintercept = 0)+
geom_hline(yintercept = 0)+
geom_point(aes(color=FiAssign), size=1, alpha=0.3) +
labs(color="Assignments") +
#geom_polygon(data=chulls, aes(x=V1, y=V3, group=FiAssign), fill=NA, size=1)+
#geom_point(size=2, alpha= .2) +
ggtitle("Studies' Component Scores: 1 vs. 3")+
xlab("Component 1: 0.42%, \u03BB = 0.25") +
ylab("Component 3: 0.31%, \u03BB = 0.18") +
theme_bw()
print(g)
chulls <- ddply(Fis_studies, .(FiAssign), function(df) df[chull(df$V4, df$V5), ])
g<- ggplot(data=Fis,
aes(x=V4,
y=V5,
color=FiAssign
)) +
geom_vline(xintercept = 0)+
geom_hline(yintercept = 0)+
geom_point(aes(color=FiAssign), size=1, alpha=0.3) +
labs(color="Assignments") +
#geom_polygon(data=chulls, aes(x=V4, y=V5, group=FiAssign), fill=NA, size=1)+
#geom_point(size=2, alpha= .2) +
ggtitle("Studies' Component Scores: 4 vs. 5")+
xlab("Component 4: 0.26%, \u03BB = 0.15") +
ylab("Component 5: 0.25%, \u03BB = 0.15") +
theme_bw()
print(g)
Fjs_words
chulls <- ddply(Fjs_words, .(FjAssign), function(df) df[chull(df$V1, df$V2), ])
g<- ggplot(data=Fjs_words,
aes(x=V1,
y=V2,
color=FjAssign
)) +
geom_vline(xintercept = 0, alpha=.5)+
geom_hline(yintercept = 0, alpha=.5)+
geom_point(aes(color=FjAssign), size=1, alpha=0.3) +
labs(color="Assignments") +
#geom_polygon(data=chulls, aes(x=V1, y=V2, group=FjAssign), fill=NA, size=1)+
#geom_point(size=2, alpha= .2) +
ggtitle("Words' Component Scores: 1 vs. 2")+
xlab("Component 1: 0.42%, \u03BB = 0.25") +
ylab("Component 2: 0.35%, \u03BB = 0.20") +
theme_bw()
print(g)
# 1 vs 3
chulls <- ddply(Fjs_words, .(FjAssign), function(df) df[chull(df$V1, df$V3), ])
g<- ggplot(data=Fjs,
aes(x=V1,
y=V3,
color=FjAssign
)) +
geom_vline(xintercept = 0)+
geom_hline(yintercept = 0)+
geom_point(aes(color=FjAssign), size=1, alpha=0.3) +
labs(color="Assignments") +
#geom_polygon(data=chulls, aes(x=V1, y=V3, group=FjAssign), fill=NA, size=1)+
#geom_point(size=2, alpha= .2) +
ggtitle("Words' Component Scores: 1 vs. 3")+
xlab("Component 1: 0.42%, \u03BB = 0.25") +
ylab("Component 3: 0.31%, \u03BB = 0.18") +
theme_bw()
print(g)
# 4 vs 5
chulls <- ddply(Fjs_words, .(FjAssign), function(df) df[chull(df$V4, df$V5), ])
g<- ggplot(data=Fjs,
aes(x=V4,
y=V5,
color=FjAssign
)) +
geom_vline(xintercept = 0)+
geom_hline(yintercept = 0)+
geom_point(aes(color=FjAssign), size=1, alpha=0.3) +
labs(color="Assignments") +
#geom_polygon(data=chulls, aes(x=V4, y=V5, group=FjAssign), fill=NA, size=1)+
#geom_point(size=2, alpha= .2) +
ggtitle("Words' Component Scores: 4 vs. 5")+
xlab("Component 4: 0.26%, \u03BB = 0.15") +
ylab("Component 5: 0.25%, \u03BB = 0.15") +
theme_bw()
print(g)
Fjs_words$V1
Fjs_words$V1
pos.inds <- order(Fjs_words$V1, decreasing = T)[1:20]
paste0(as.character(Fjs_words$word[pos.inds]), collapse = ', ')
neg.inds <- order(Fjs_words$V1)[1:20]
paste0(as.character(Fjs_words$word[neg.inds]), collapse = ', ')
pos.inds <- order(Fjs_words$V2, decreasing = T)[1:20]
paste0(as.character(Fjs_words$word[pos.inds]), collapse = ', ')
neg.inds <- order(Fjs_words$V2)[1:20]
paste0(as.character(Fjs_words$word[neg.inds]), collapse = ', ')
pos.inds <- order(Fjs_words$V3, decreasing = T)[1:20]
paste0(as.character(Fjs_words$word[pos.inds]), collapse = ', ')
neg.inds <- order(Fjs_words$V3)[1:20]
paste0(as.character(Fjs_words$word[neg.inds]), collapse = ', ')
fastEucCalc <- function (x, c)
{
if (ncol(x) == 1) {
return((x^2) %*% matrix(1, 1, nrow(c)) + matrix(1, nrow(x),
1) %*% t((c^2)) - 2 * x %*% t(c))
}
else {
x2 = colSums(t(x)^2)
c2 = colSums(t(c)^2)
return(x2 %*% matrix(1, 1, nrow(c)) + matrix(1, nrow(x),
1) %*% c2 - (2 * x %*% t(c)))
}
}
# words
fj.centers <- t( sapply(1:6, function(x) apply(Fjs[FjAssign==x,],2,mean)) )
Dsup <- fastEucCalc(as.matrix(Fjs[FjAssign==clust,]), fj.centers)
minD <- apply(Dsup, 1, min)
cat(stemmed_words_vec_9987[FjAssign==clust][order(minD)[1:20]], sep=', ')
clust <- 1      # change this..
fj.centers <- t( sapply(1:6, function(x) apply(Fjs[FjAssign==x,],2,mean)) )
Dsup <- fastEucCalc(as.matrix(Fjs[FjAssign==clust,]), fj.centers)
minD <- apply(Dsup, 1, min)
cat(stemmed_words_vec_9987[FjAssign==clust][order(minD)[1:20]], sep=', ')
fi.centers <- t( sapply(1:6, function(x) apply(Fis[FiAssign==x,],2,mean)) )
Dsup <- fastEucCalc(as.matrix(Fis[FiAssign==clust,]), fi.centers)
minD <- apply(Dsup, 1, min)
cat(as.character(Fis_studies$pubmed[FiAssign==clust][order(minD)[1:20]]), sep= '\n')
cat(as.character(Fis_studies$title[FiAssign==clust][order(minD)[1:20]]), sep= '\n')
fi.centers <- t(as.matrix(c(0,0,0,0,0)))
Dsup <- fastEucCalc(as.matrix(Fis), fi.centers)
minD <- apply(Dsup, 1, min)
cat(as.character(Fis_studies$pubmed[order(minD)[1:20]]), sep= '\n')
cat(as.character(Fis_studies$title[order(minD)[1:20]]), sep= '\n')
cat(FiAssign[order(minD)[1:20]], sep= '\n')
cat(as.character(Fis_studies$pubmed[order(minD, decreasing = TRUE)[1:20]]), sep= '\n')
cat(as.character(Fis_studies$title[order(minD, decreasing = TRUE)[1:20]]), sep= '\n')
cat(FiAssign[order(minD,decreasing = TRUE)[1:20]], sep= '\n')
fj.centers <- t(as.matrix(c(0,0,0,0,0)))
Dsup <- fastEucCalc(as.matrix(Fjs), fj.centers)
minD <- apply(Dsup, 1, min)
cat(as.character(Fjs_words$word[order(minD)[1:20]]), sep= '\n')
cat(as.character(Fjs_words$FjAssign[order(minD)[1:20]]), sep= '\n')
cat(as.character(Fjs_words$word[order(minD, decreasing = TRUE)[1:20]]), sep= '\n')
cat(as.character(Fjs_words$FjAssign[order(minD, decreasing = TRUE)[1:20]]), sep= '\n')
g1<- ggplot(data=clust_evals, aes(x=X, y=studies_crit)) +
geom_line() +
geom_point(size=2) +
geom_text(label=clust_evals$X, vjust=-1) +
ylim(limits=c(2000,2560)) +
labs(title="Cluster Evaluation of Studies",
x="Cluster", y="Calinski- Harabasz Index") +
theme_bw()
ggsave('./plots/studies_clust_eval.png',g1)
g1<- ggplot(data=clust_evals, aes(x=X, y=studies_crit)) +
geom_line() +
geom_point(size=2) +
geom_text(label=clust_evals$X, vjust=-1) +
ylim(limits=c(2000,2560)) +
labs(title="Cluster Evaluation of Studies",
x="Cluster", y="Calinski- Harabasz Index") +
theme_bw()
g1
paste(stemmed_words_vec_9987[which(FjAssign==1)], collapse = ', ') #knowedge representation and language processing
paste(stemmed_words_vec_9987[which(FjAssign==2)], collapse = ', ') #Lifesoan and brain disorders
tau <- FiFj$tau
gg<-ggplot(data.frame(component=1:length(tau),value=tau) , aes(y=value, x=component)) +
geom_point() + theme_bw() + geom_path() +
labs(title="Scree Plot of explained variance of all components",
x= "Component", y="Variance Explained (%)")
gg
year_clust_raw <- table(Fis_studies$year,Fis_studies$FiAssign)
year_clust_raw <- t(year_clust_raw)
year_clust_raw <- year_clust_raw[,4:18]
year_clust_freq <-
apply(year_clust_raw, 1,
function(xx) xx/apply(year_clust_raw, c(2),
function(x) sum(x)))
year_clust_freq <- t(year_clust_freq)
p.dat<-melt(year_clust_freq)
names(p.dat) <- c("Cluster", "Year", "Publications")
p.dat$Cluster <- as.factor(p.dat$Cluster)
g<-ggplot(p.dat , aes(x=Year,y=Publications, group=Cluster)) +
geom_point(aes(color=Cluster), size=1, color="white")+
geom_line(aes(color=Cluster), size=1)+
scale_x_discrete(limits=c(2000,2005,2010,2014)) +
theme_bw() +
labs(x="Year", y="% of studeis", title="Relative Frequency of Studies\nBy Year By Cluster")
g
words.coordinates.all <- data.frame(round(Fjs,2) , word=stemmed_words_vec_9987, freq=freq.df$freq, clust=FjAssign)
num <- 20
term.matrix <- cbind(c(words.coordinates.all$freq[order(words.coordinates.all$V1)[1:num]],
rep(0, num)),
c(rep(0,num),
words.coordinates.all$freq[order(words.coordinates.all$V1, decreasing = T)[1:num]]) )
ext20_c1 <- c(order(words.coordinates.all$V1)[1:num],
order(words.coordinates.all$V1, decreasing = T)[1:num])
row.names(term.matrix) <- words.coordinates.all$word[ext20_c1]
png(file="./plots/word_cloud_comp1.png",height=600,width=600)
comparison.cloud(term.matrix[,c(2,1)],scale=c(7,3),
max.words=300,random.order=F,
colors=c("#D73027","#2171B5"),
rot.per = 0, fixed.asp = F)
dev.off()
num <- 20
term.matrix <- cbind(c(words.coordinates.all$freq[order(words.coordinates.all$V2)[1:num]], rep(0, num)),
c(rep(0,num), words.coordinates.all$freq[order(words.coordinates.all$V2, decreasing = T)[1:num]]) )
ext20_c1 <- c(order(words.coordinates.all$V2)[1:num],
order(words.coordinates.all$V2, decreasing = T)[1:num])
row.names(term.matrix) <- words.coordinates.all$word[ext20_c1]
png(file="./plots/word_cloud_comp2.png",height=600,width=600)
comparison.cloud(term.matrix[,c(2,1)],scale=c(7,3),
max.words=300,random.order=F,
colors=c("#D73027","#2171B5"),
rot.per = 0, fixed.asp = F)
dev.off()
num <- 20
term.matrix <- cbind(c(words.coordinates.all$freq[order(words.coordinates.all$V3)[1:num]], rep(0, num)),
c(rep(0,num), words.coordinates.all$freq[order(words.coordinates.all$V3, decreasing = T)[1:num]]) )
ext20_c1 <- c(order(words.coordinates.all$V3)[1:num],
order(words.coordinates.all$V3, decreasing = T)[1:num])
row.names(term.matrix) <- words.coordinates.all$word[ext20_c1]
png(file="./plots/word_cloud_comp3.png",height=600,width=600)
comparison.cloud(term.matrix[,c(2,1)],scale=c(7,3),
max.words=300,random.order=F,
colors=c("#D73027","#2171B5"),
rot.per = 0, fixed.asp = F)
dev.off()
num <- 20
term.matrix <- cbind(c(words.coordinates.all$freq[order(words.coordinates.all$V4)[1:num]], rep(0, num)),
c(rep(0,num), words.coordinates.all$freq[order(words.coordinates.all$V4, decreasing = T)[1:num]]) )
ext20_c1 <- c(order(words.coordinates.all$V4)[1:num],
order(words.coordinates.all$V4, decreasing = T)[1:num])
row.names(term.matrix) <- words.coordinates.all$word[ext20_c1]
png(file="./plots/word_cloud_comp4.png",height=600,width=600)
comparison.cloud(term.matrix[,c(2,1)],scale=c(7,3),
max.words=300,random.order=F,
colors=c("#D73027","#2171B5"),
rot.per = 0, fixed.asp = F)
dev.off()
num <- 20
term.matrix <- cbind(c(words.coordinates.all$freq[order(words.coordinates.all$V5)[1:num]], rep(0, num)),
c(rep(0,num), words.coordinates.all$freq[order(words.coordinates.all$V5, decreasing = T)[1:num]]) )
ext20_c1 <- c(order(words.coordinates.all$V5)[1:num],
order(words.coordinates.all$V5, decreasing = T)[1:num])
row.names(term.matrix) <- words.coordinates.all$word[ext20_c1]
png(file="./plots/word_cloud_comp5.png",height=600,width=600)
comparison.cloud(term.matrix[,c(2,1)],scale=c(7,3),
max.words=300,random.order=F,
colors=c("#D73027","#2171B5"),
rot.per = 0, fixed.asp = F)
dev.off()
neurological<- c(97, 693, 1115, 832, 1988, 1271, 913)
# alzheim 97
# dementia 693
# frontotempor 1115
# dystonia 832
# parkinson 1988
# huntington 1271
# epilepsi 913
psychiatric <- c(45,232, 296, 2959, 138, 704, 150, 1882, 2473, 2119, 2897)
# adhd 45
# autism 232
# bipolar 296
# unipolar 2959
# anorexia 138
# depress 704
# antidepress 150
# obsess 1882
# schizophrenia 2473
# posttraumat 2119
# traumat 2897
words.temp1 <- cbind(words.coordinates.all[psychiatric,], class='psychiatric')
words.temp2 <- cbind(words.coordinates.all[neurological,], class='neurological')
words.classes <- rbind(words.temp1,words.temp2)
words.classes <- words.classes[,c("word","freq","class","V1","V2","V3","V4","V5")]
write.csv(words.classes,quote = FALSE, row.names = FALSE)
g12<-ggplot(data=words.classes, aes(x=V1, y=V2, color=class, label=word)) +
geom_vline(xintercept = 0, color= "grey")+
geom_hline(yintercept = 0, color= "grey")+
#geom_point(aes(color=clust), size=3, alpha=.7) +
geom_text(size=5) +
labs(x="Component 1", y="Component 2", color= "Disorder\nClass") +
#facet_wrap(~class) +
theme_minimal()
print(g12)
head(words.coordinates.all)
words.temp1 <- cbind(words.coordinates.all[psychiatric,], class='psychiatric')
words.temp2 <- cbind(words.coordinates.all[neurological,], class='neurological')
words.classes <- rbind(words.temp1,words.temp2)
words.classes <- words.classes[,c("word","freq","class","clust","V1","V2","V3","V4","V5")]
write.csv(words.classes,quote = FALSE, row.names = FALSE)
write.csv?
?write.csv
write.csv(words.classes,
file= paste0(data_dir, '/psychiatric_vs_neurological.csv'),
quote = FALSE,
row.names = FALSE)
exit()
exit
exit
qc()
q()
